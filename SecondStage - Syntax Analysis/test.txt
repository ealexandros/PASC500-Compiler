Grammar

    0 $accept: program "end of file"

    1 program: header declarations subprograms comp_statement "."

    2 header: "PROGRAM" "identifier" ";"
    3       | error "identifier" ";"
    4       | "PROGRAM" error ";"
    5       | "PROGRAM" "identifier" error

    6 declarations: constdefs typedefs vardefs

    7 constdefs: "CONST" constant_defs ";"
    8          | %empty

    9 constant_defs: constant_defs ";" "identifier" "=" expression
   10              | "identifier" "=" expression

   11 expression: expression ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression "=" expression
   13           | expression "IN" expression
   14           | expression "OR" expression
   15           | expression "ADD" expression
   16           | expression "* or / or DIV or MOD or AND" expression
   17           | "ADD" expression
   18           | "NOT" expression
   19           | variable
   20           | "identifier" "(" expressions ")"
   21           | constant
   22           | "(" expression ")"
   23           | setexpression

   24 variable: "identifier"
   25         | variable "." "identifier"
   26         | variable "[" expressions "]"

   27 expressions: expressions "," expression
   28            | expression

   29 constant: "integer const"
   30         | "unsigned float const"
   31         | "boolean constant"
   32         | "character consant"

   33 setexpression: "[" elexpressions "]"
   34              | "[" "]"

   35 elexpressions: elexpressions "," elexpression
   36              | elexpression

   37 elexpression: expression ".." expression
   38             | expression

   39 typedefs: "TYPE" type_defs ";"
   40         | %empty

   41 type_defs: type_defs ";" "identifier" "=" type_def
   42          | "identifier" "=" type_def

   43 type_def: "ARRAY" "[" dims "]" "OF" typename
   44         | "SET" "OF" typename
   45         | "RECORD" fields "END"
   46         | "(" identifiers ")"
   47         | limit ".." limit

   48 dims: dims "," limits
   49     | limits

   50 limits: limit ".." limit
   51       | "identifier"

   52 limit: "ADD" "integer const"
   53      | "ADD" "identifier"
   54      | "integer const"
   55      | "character consant"
   56      | "boolean constant"
   57      | "identifier"

   58 typename: standard_type
   59         | "identifier"

   60 standard_type: "INTEGER"
   61              | "REAL"
   62              | "BOOLEAN"
   63              | "CHAR"

   64 fields: fields ";" field
   65       | field

   66 field: identifiers ":" typename

   67 identifiers: identifiers "," "identifier"
   68            | "identifier"

   69 vardefs: "VAR" variable_defs ";"
   70        | %empty

   71 variable_defs: variable_defs ";" identifiers ":" typename
   72              | identifiers ":" typename

   73 subprograms: subprograms subprogram ";"
   74            | %empty

   75 subprogram: sub_header ";" "FORWARD"
   76           | sub_header ";" declarations subprograms comp_statement

   77 sub_header: "FUNCTION" "identifier" formal_parameters ":" standard_type
   78           | "PROCEDURE" "identifier" formal_parameters
   79           | "FUNCTION" "identifier"

   80 formal_parameters: "(" parameter_list ")"
   81                  | %empty

   82 parameter_list: parameter_list ";" pass identifiers ":" typename
   83               | pass identifiers ":" typename

   84 pass: "VAR"
   85     | %empty

   86 comp_statement: "BEGIN" statements "END"

   87 statements: statements ";" statement
   88           | statement

   89 statement: assignment
   90          | if_statement
   91          | while_statement
   92          | for_statement
   93          | with_statement
   94          | subprogram_call
   95          | io_statement
   96          | comp_statement
   97          | %empty

   98 assignment: variable ":=" expression
   99           | variable ":=" "string constant"

  100 if_statement: "IF" expression "THEN" statement if_tail

  101 if_tail: "ELSE" statement
  102        | %empty

  103 while_statement: "WHILE" expression "DO" statement

  104 for_statement: "FOR" "identifier" ":=" iter_space "DO" statement

  105 iter_space: expression "TO" expression
  106           | expression "DOWNTO" expression

  107 with_statement: "WITH" variable "DO" statement

  108 subprogram_call: "identifier"
  109                | "identifier" "(" expressions ")"

  110 io_statement: "READ" "(" read_list ")"
  111             | "WRITE" "(" write_list ")"

  112 read_list: read_list "," read_item
  113          | read_item

  114 read_item: variable

  115 write_list: write_list "," write_item
  116           | write_item

  117 write_item: expression
  118           | "string constant"


Terminals, with rules where they appear

    "end of file" <strval> (0) 0
    error (256) 3 4 5
    "PROGRAM" <strval> (258) 2 4 5
    "BEGIN" <strval> (259) 86
    "END" <strval> (260) 45 86
    "PROCEDURE" <strval> (261) 78
    "FUNCTION" <strval> (262) 77 79
    "FORWARD" <strval> (263) 75
    "CONST" <strval> (264) 7
    "TYPE" <strval> (265) 39
    "ARRAY" <strval> (266) 43
    "VAR" <strval> (267) 69 84
    "INTEGER" <strval> (268) 60
    "REAL" <strval> (269) 61
    "BOOLEAN" <strval> (270) 62
    "RECORD" <strval> (271) 45
    "CHAR" <strval> (272) 63
    "SET" <strval> (273) 44
    "IF" <strval> (274) 100
    "WHILE" <strval> (275) 103
    "DO" <strval> (276) 103 104 107
    "FOR" <strval> (277) 104
    "ELSE" <strval> (278) 101
    "THEN" <strval> (279) 100
    "DOWNTO" <strval> (280) 106
    "TO" <strval> (281) 105
    "OF" <strval> (282) 43 44
    "WITH" <strval> (283) 107
    "READ" <strval> (284) 110
    "WRITE" <strval> (285) 111
    ">= or | or <= or | or <> or | or > or | or<" <strval> (286) 11
    "ADD" <strval> (287) 15 17 52 53
    "OR" <strval> (288) 14
    "* or / or DIV or MOD or AND" <strval> (289) 16
    "NOT" <strval> (290) 18
    "IN" <strval> (291) 13
    "(" <strval> (292) 20 22 46 80 109 110 111
    ")" <strval> (293) 20 22 46 80 109 110 111
    "." <strval> (294) 1 25
    "," <strval> (295) 27 35 48 67 112 115
    "=" <strval> (296) 9 10 12 41 42
    ":" <strval> (297) 66 71 72 77 82 83
    "[" <strval> (298) 26 33 34 43
    "]" <strval> (299) 26 33 34 43
    ":=" <strval> (300) 98 99 104
    ".." <strval> (301) 37 47 50
    ";" <strval> (302) 2 3 4 7 9 39 41 64 69 71 73 75 76 82 87
    "identifier" <strval> (303) 2 3 5 9 10 20 24 25 41 42 51 53 57 59 67 68 77 78 79 104 108 109
    "integer const" <intval> (304) 29 52 54
    "unsigned float const" <floatval> (305) 30
    "boolean constant" <strval> (306) 31 56
    "character consant" <charval> (307) 32 55
    "string constant" <strval> (308) 99 118
    LOWER_THAN_ELSE (309)


Nonterminals, with rules where they appear

    $accept (55)
        on left: 0
    program <strval> (56)
        on left: 1
        on right: 0
    header <strval> (57)
        on left: 2 3 4 5
        on right: 1
    declarations <strval> (58)
        on left: 6
        on right: 1 76
    constdefs <strval> (59)
        on left: 7 8
        on right: 6
    constant_defs <strval> (60)
        on left: 9 10
        on right: 7 9
    expression <strval> (61)
        on left: 11 12 13 14 15 16 17 18 19 20 21 22 23
        on right: 9 10 11 12 13 14 15 16 17 18 22 27 28 37 38 98 100 103 105 106 117
    variable <strval> (62)
        on left: 24 25 26
        on right: 19 25 26 98 99 107 114
    expressions <strval> (63)
        on left: 27 28
        on right: 20 26 27 109
    constant <strval> (64)
        on left: 29 30 31 32
        on right: 21
    setexpression <strval> (65)
        on left: 33 34
        on right: 23
    elexpressions <strval> (66)
        on left: 35 36
        on right: 33 35
    elexpression <strval> (67)
        on left: 37 38
        on right: 35 36
    typedefs <strval> (68)
        on left: 39 40
        on right: 6
    type_defs <strval> (69)
        on left: 41 42
        on right: 39 41
    type_def <strval> (70)
        on left: 43 44 45 46 47
        on right: 41 42
    dims <strval> (71)
        on left: 48 49
        on right: 43 48
    limits <strval> (72)
        on left: 50 51
        on right: 48 49
    limit <strval> (73)
        on left: 52 53 54 55 56 57
        on right: 47 50
    typename <strval> (74)
        on left: 58 59
        on right: 43 44 66 71 72 82 83
    standard_type <strval> (75)
        on left: 60 61 62 63
        on right: 58 77
    fields <strval> (76)
        on left: 64 65
        on right: 45 64
    field <strval> (77)
        on left: 66
        on right: 64 65
    identifiers <strval> (78)
        on left: 67 68
        on right: 46 66 67 71 72 82 83
    vardefs <strval> (79)
        on left: 69 70
        on right: 6
    variable_defs <strval> (80)
        on left: 71 72
        on right: 69 71
    subprograms <strval> (81)
        on left: 73 74
        on right: 1 73 76
    subprogram <strval> (82)
        on left: 75 76
        on right: 73
    sub_header <strval> (83)
        on left: 77 78 79
        on right: 75 76
    formal_parameters <strval> (84)
        on left: 80 81
        on right: 77 78
    parameter_list <strval> (85)
        on left: 82 83
        on right: 80 82
    pass <strval> (86)
        on left: 84 85
        on right: 82 83
    comp_statement <strval> (87)
        on left: 86
        on right: 1 76 96
    statements <strval> (88)
        on left: 87 88
        on right: 86 87
    statement <strval> (89)
        on left: 89 90 91 92 93 94 95 96 97
        on right: 87 88 100 101 103 104 107
    assignment <strval> (90)
        on left: 98 99
        on right: 89
    if_statement <strval> (91)
        on left: 100
        on right: 90
    if_tail <strval> (92)
        on left: 101 102
        on right: 100
    while_statement <strval> (93)
        on left: 103
        on right: 91
    for_statement <strval> (94)
        on left: 104
        on right: 92
    iter_space <strval> (95)
        on left: 105 106
        on right: 104
    with_statement <strval> (96)
        on left: 107
        on right: 93
    subprogram_call <strval> (97)
        on left: 108 109
        on right: 94
    io_statement <strval> (98)
        on left: 110 111
        on right: 95
    read_list <strval> (99)
        on left: 112 113
        on right: 110 112
    read_item <strval> (100)
        on left: 114
        on right: 112 113
    write_list <strval> (101)
        on left: 115 116
        on right: 111 115
    write_item <strval> (102)
        on left: 117 118
        on right: 115 116


State 0

    0 $accept: . program "end of file"

    error      shift, and go to state 1
    "PROGRAM"  shift, and go to state 2

    program  go to state 3
    header   go to state 4


State 1

    3 header: error . "identifier" ";"

    "identifier"  shift, and go to state 5


State 2

    2 header: "PROGRAM" . "identifier" ";"
    4       | "PROGRAM" . error ";"
    5       | "PROGRAM" . "identifier" error

    error         shift, and go to state 6
    "identifier"  shift, and go to state 7


State 3

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 8


State 4

    1 program: header . declarations subprograms comp_statement "."

    "CONST"  shift, and go to state 9

    $default  reduce using rule 8 (constdefs)

    declarations  go to state 10
    constdefs     go to state 11


State 5

    3 header: error "identifier" . ";"

    ";"  shift, and go to state 12


State 6

    4 header: "PROGRAM" error . ";"

    ";"  shift, and go to state 13


State 7

    2 header: "PROGRAM" "identifier" . ";"
    5       | "PROGRAM" "identifier" . error

    error  shift, and go to state 14
    ";"    shift, and go to state 15


State 8

    0 $accept: program "end of file" .

    $default  accept


State 9

    7 constdefs: "CONST" . constant_defs ";"

    "identifier"  shift, and go to state 16

    constant_defs  go to state 17


State 10

    1 program: header declarations . subprograms comp_statement "."

    $default  reduce using rule 74 (subprograms)

    subprograms  go to state 18


State 11

    6 declarations: constdefs . typedefs vardefs

    "TYPE"  shift, and go to state 19

    $default  reduce using rule 40 (typedefs)

    typedefs  go to state 20


State 12

    3 header: error "identifier" ";" .

    $default  reduce using rule 3 (header)


State 13

    4 header: "PROGRAM" error ";" .

    $default  reduce using rule 4 (header)


State 14

    5 header: "PROGRAM" "identifier" error .

    $default  reduce using rule 5 (header)


State 15

    2 header: "PROGRAM" "identifier" ";" .

    $default  reduce using rule 2 (header)


State 16

   10 constant_defs: "identifier" . "=" expression

    "="  shift, and go to state 21


State 17

    7 constdefs: "CONST" constant_defs . ";"
    9 constant_defs: constant_defs . ";" "identifier" "=" expression

    ";"  shift, and go to state 22


State 18

    1 program: header declarations subprograms . comp_statement "."
   73 subprograms: subprograms . subprogram ";"

    "BEGIN"      shift, and go to state 23
    "PROCEDURE"  shift, and go to state 24
    "FUNCTION"   shift, and go to state 25

    subprogram      go to state 26
    sub_header      go to state 27
    comp_statement  go to state 28


State 19

   39 typedefs: "TYPE" . type_defs ";"

    "identifier"  shift, and go to state 29

    type_defs  go to state 30


State 20

    6 declarations: constdefs typedefs . vardefs

    "VAR"  shift, and go to state 31

    $default  reduce using rule 70 (vardefs)

    vardefs  go to state 32


State 21

   10 constant_defs: "identifier" "=" . expression

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 42
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 22

    7 constdefs: "CONST" constant_defs ";" .
    9 constant_defs: constant_defs ";" . "identifier" "=" expression

    "identifier"  shift, and go to state 46

    $default  reduce using rule 7 (constdefs)


State 23

   86 comp_statement: "BEGIN" . statements "END"

    "BEGIN"       shift, and go to state 23
    "IF"          shift, and go to state 47
    "WHILE"       shift, and go to state 48
    "FOR"         shift, and go to state 49
    "WITH"        shift, and go to state 50
    "READ"        shift, and go to state 51
    "WRITE"       shift, and go to state 52
    "identifier"  shift, and go to state 53

    $default  reduce using rule 97 (statement)

    variable         go to state 54
    comp_statement   go to state 55
    statements       go to state 56
    statement        go to state 57
    assignment       go to state 58
    if_statement     go to state 59
    while_statement  go to state 60
    for_statement    go to state 61
    with_statement   go to state 62
    subprogram_call  go to state 63
    io_statement     go to state 64


State 24

   78 sub_header: "PROCEDURE" . "identifier" formal_parameters

    "identifier"  shift, and go to state 65


State 25

   77 sub_header: "FUNCTION" . "identifier" formal_parameters ":" standard_type
   79           | "FUNCTION" . "identifier"

    "identifier"  shift, and go to state 66


State 26

   73 subprograms: subprograms subprogram . ";"

    ";"  shift, and go to state 67


State 27

   75 subprogram: sub_header . ";" "FORWARD"
   76           | sub_header . ";" declarations subprograms comp_statement

    ";"  shift, and go to state 68


State 28

    1 program: header declarations subprograms comp_statement . "."

    "."  shift, and go to state 69


State 29

   42 type_defs: "identifier" . "=" type_def

    "="  shift, and go to state 70


State 30

   39 typedefs: "TYPE" type_defs . ";"
   41 type_defs: type_defs . ";" "identifier" "=" type_def

    ";"  shift, and go to state 71


State 31

   69 vardefs: "VAR" . variable_defs ";"

    "identifier"  shift, and go to state 72

    identifiers    go to state 73
    variable_defs  go to state 74


State 32

    6 declarations: constdefs typedefs vardefs .

    $default  reduce using rule 6 (declarations)


State 33

   17 expression: "ADD" . expression

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 75
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 34

   18 expression: "NOT" . expression

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 76
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 35

   22 expression: "(" . expression ")"

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 77
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 36

   33 setexpression: "[" . elexpressions "]"
   34              | "[" . "]"

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "]"                     shift, and go to state 78
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 79
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45
    elexpressions  go to state 80
    elexpression   go to state 81


State 37

   20 expression: "identifier" . "(" expressions ")"
   24 variable: "identifier" .

    "("  shift, and go to state 82

    $default  reduce using rule 24 (variable)


State 38

   29 constant: "integer const" .

    $default  reduce using rule 29 (constant)


State 39

   30 constant: "unsigned float const" .

    $default  reduce using rule 30 (constant)


State 40

   31 constant: "boolean constant" .

    $default  reduce using rule 31 (constant)


State 41

   32 constant: "character consant" .

    $default  reduce using rule 32 (constant)


State 42

   10 constant_defs: "identifier" "=" expression .
   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression . "=" expression
   13           | expression . "IN" expression
   14           | expression . "OR" expression
   15           | expression . "ADD" expression
   16           | expression . "* or / or DIV or MOD or AND" expression

    ">= or | or <= or | or <> or | or > or | or<"  shift, and go to state 83
    "ADD"                                          shift, and go to state 84
    "OR"                                           shift, and go to state 85
    "* or / or DIV or MOD or AND"                  shift, and go to state 86
    "IN"                                           shift, and go to state 87
    "="                                            shift, and go to state 88

    $default  reduce using rule 10 (constant_defs)


State 43

   19 expression: variable .
   25 variable: variable . "." "identifier"
   26         | variable . "[" expressions "]"

    "."  shift, and go to state 89
    "["  shift, and go to state 90

    $default  reduce using rule 19 (expression)


State 44

   21 expression: constant .

    $default  reduce using rule 21 (expression)


State 45

   23 expression: setexpression .

    $default  reduce using rule 23 (expression)


State 46

    9 constant_defs: constant_defs ";" "identifier" . "=" expression

    "="  shift, and go to state 91


State 47

  100 if_statement: "IF" . expression "THEN" statement if_tail

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 92
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 48

  103 while_statement: "WHILE" . expression "DO" statement

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 93
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 49

  104 for_statement: "FOR" . "identifier" ":=" iter_space "DO" statement

    "identifier"  shift, and go to state 94


State 50

  107 with_statement: "WITH" . variable "DO" statement

    "identifier"  shift, and go to state 95

    variable  go to state 96


State 51

  110 io_statement: "READ" . "(" read_list ")"

    "("  shift, and go to state 97


State 52

  111 io_statement: "WRITE" . "(" write_list ")"

    "("  shift, and go to state 98


State 53

   24 variable: "identifier" .
  108 subprogram_call: "identifier" .
  109                | "identifier" . "(" expressions ")"

    "("  shift, and go to state 99

    "END"     reduce using rule 108 (subprogram_call)
    "ELSE"    reduce using rule 108 (subprogram_call)
    ";"       reduce using rule 108 (subprogram_call)
    $default  reduce using rule 24 (variable)


State 54

   25 variable: variable . "." "identifier"
   26         | variable . "[" expressions "]"
   98 assignment: variable . ":=" expression
   99           | variable . ":=" "string constant"

    "."   shift, and go to state 89
    "["   shift, and go to state 90
    ":="  shift, and go to state 100


State 55

   96 statement: comp_statement .

    $default  reduce using rule 96 (statement)


State 56

   86 comp_statement: "BEGIN" statements . "END"
   87 statements: statements . ";" statement

    "END"  shift, and go to state 101
    ";"    shift, and go to state 102


State 57

   88 statements: statement .

    $default  reduce using rule 88 (statements)


State 58

   89 statement: assignment .

    $default  reduce using rule 89 (statement)


State 59

   90 statement: if_statement .

    $default  reduce using rule 90 (statement)


State 60

   91 statement: while_statement .

    $default  reduce using rule 91 (statement)


State 61

   92 statement: for_statement .

    $default  reduce using rule 92 (statement)


State 62

   93 statement: with_statement .

    $default  reduce using rule 93 (statement)


State 63

   94 statement: subprogram_call .

    $default  reduce using rule 94 (statement)


State 64

   95 statement: io_statement .

    $default  reduce using rule 95 (statement)


State 65

   78 sub_header: "PROCEDURE" "identifier" . formal_parameters

    "("  shift, and go to state 103

    $default  reduce using rule 81 (formal_parameters)

    formal_parameters  go to state 104


State 66

   77 sub_header: "FUNCTION" "identifier" . formal_parameters ":" standard_type
   79           | "FUNCTION" "identifier" .

    "("  shift, and go to state 103

    ":"       reduce using rule 81 (formal_parameters)
    $default  reduce using rule 79 (sub_header)

    formal_parameters  go to state 105


State 67

   73 subprograms: subprograms subprogram ";" .

    $default  reduce using rule 73 (subprograms)


State 68

   75 subprogram: sub_header ";" . "FORWARD"
   76           | sub_header ";" . declarations subprograms comp_statement

    "FORWARD"  shift, and go to state 106
    "CONST"    shift, and go to state 9

    $default  reduce using rule 8 (constdefs)

    declarations  go to state 107
    constdefs     go to state 11


State 69

    1 program: header declarations subprograms comp_statement "." .

    $default  reduce using rule 1 (program)


State 70

   42 type_defs: "identifier" "=" . type_def

    "ARRAY"              shift, and go to state 108
    "RECORD"             shift, and go to state 109
    "SET"                shift, and go to state 110
    "ADD"                shift, and go to state 111
    "("                  shift, and go to state 112
    "identifier"         shift, and go to state 113
    "integer const"      shift, and go to state 114
    "boolean constant"   shift, and go to state 115
    "character consant"  shift, and go to state 116

    type_def  go to state 117
    limit     go to state 118


State 71

   39 typedefs: "TYPE" type_defs ";" .
   41 type_defs: type_defs ";" . "identifier" "=" type_def

    "identifier"  shift, and go to state 119

    $default  reduce using rule 39 (typedefs)


State 72

   68 identifiers: "identifier" .

    $default  reduce using rule 68 (identifiers)


State 73

   67 identifiers: identifiers . "," "identifier"
   72 variable_defs: identifiers . ":" typename

    ","  shift, and go to state 120
    ":"  shift, and go to state 121


State 74

   69 vardefs: "VAR" variable_defs . ";"
   71 variable_defs: variable_defs . ";" identifiers ":" typename

    ";"  shift, and go to state 122


State 75

   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression . "=" expression
   13           | expression . "IN" expression
   14           | expression . "OR" expression
   15           | expression . "ADD" expression
   16           | expression . "* or / or DIV or MOD or AND" expression
   17           | "ADD" expression .

    ">= or | or <= or | or <> or | or > or | or<"  shift, and go to state 83
    "* or / or DIV or MOD or AND"                  shift, and go to state 86
    "IN"                                           shift, and go to state 87

    $default  reduce using rule 17 (expression)


State 76

   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression . "=" expression
   13           | expression . "IN" expression
   14           | expression . "OR" expression
   15           | expression . "ADD" expression
   16           | expression . "* or / or DIV or MOD or AND" expression
   18           | "NOT" expression .

    ">= or | or <= or | or <> or | or > or | or<"  shift, and go to state 83
    "IN"                                           shift, and go to state 87

    $default  reduce using rule 18 (expression)


State 77

   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression . "=" expression
   13           | expression . "IN" expression
   14           | expression . "OR" expression
   15           | expression . "ADD" expression
   16           | expression . "* or / or DIV or MOD or AND" expression
   22           | "(" expression . ")"

    ">= or | or <= or | or <> or | or > or | or<"  shift, and go to state 83
    "ADD"                                          shift, and go to state 84
    "OR"                                           shift, and go to state 85
    "* or / or DIV or MOD or AND"                  shift, and go to state 86
    "IN"                                           shift, and go to state 87
    ")"                                            shift, and go to state 123
    "="                                            shift, and go to state 88


State 78

   34 setexpression: "[" "]" .

    $default  reduce using rule 34 (setexpression)


State 79

   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression . "=" expression
   13           | expression . "IN" expression
   14           | expression . "OR" expression
   15           | expression . "ADD" expression
   16           | expression . "* or / or DIV or MOD or AND" expression
   37 elexpression: expression . ".." expression
   38             | expression .

    ">= or | or <= or | or <> or | or > or | or<"  shift, and go to state 83
    "ADD"                                          shift, and go to state 84
    "OR"                                           shift, and go to state 85
    "* or / or DIV or MOD or AND"                  shift, and go to state 86
    "IN"                                           shift, and go to state 87
    "="                                            shift, and go to state 88
    ".."                                           shift, and go to state 124

    $default  reduce using rule 38 (elexpression)


State 80

   33 setexpression: "[" elexpressions . "]"
   35 elexpressions: elexpressions . "," elexpression

    ","  shift, and go to state 125
    "]"  shift, and go to state 126


State 81

   36 elexpressions: elexpression .

    $default  reduce using rule 36 (elexpressions)


State 82

   20 expression: "identifier" "(" . expressions ")"

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 127
    variable       go to state 43
    expressions    go to state 128
    constant       go to state 44
    setexpression  go to state 45


State 83

   11 expression: expression ">= or | or <= or | or <> or | or > or | or<" . expression

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 129
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 84

   15 expression: expression "ADD" . expression

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 130
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 85

   14 expression: expression "OR" . expression

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 131
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 86

   16 expression: expression "* or / or DIV or MOD or AND" . expression

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 132
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 87

   13 expression: expression "IN" . expression

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 133
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 88

   12 expression: expression "=" . expression

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 134
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 89

   25 variable: variable "." . "identifier"

    "identifier"  shift, and go to state 135


State 90

   26 variable: variable "[" . expressions "]"

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 127
    variable       go to state 43
    expressions    go to state 136
    constant       go to state 44
    setexpression  go to state 45


State 91

    9 constant_defs: constant_defs ";" "identifier" "=" . expression

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 137
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 92

   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression . "=" expression
   13           | expression . "IN" expression
   14           | expression . "OR" expression
   15           | expression . "ADD" expression
   16           | expression . "* or / or DIV or MOD or AND" expression
  100 if_statement: "IF" expression . "THEN" statement if_tail

    "THEN"                                         shift, and go to state 138
    ">= or | or <= or | or <> or | or > or | or<"  shift, and go to state 83
    "ADD"                                          shift, and go to state 84
    "OR"                                           shift, and go to state 85
    "* or / or DIV or MOD or AND"                  shift, and go to state 86
    "IN"                                           shift, and go to state 87
    "="                                            shift, and go to state 88


State 93

   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression . "=" expression
   13           | expression . "IN" expression
   14           | expression . "OR" expression
   15           | expression . "ADD" expression
   16           | expression . "* or / or DIV or MOD or AND" expression
  103 while_statement: "WHILE" expression . "DO" statement

    "DO"                                           shift, and go to state 139
    ">= or | or <= or | or <> or | or > or | or<"  shift, and go to state 83
    "ADD"                                          shift, and go to state 84
    "OR"                                           shift, and go to state 85
    "* or / or DIV or MOD or AND"                  shift, and go to state 86
    "IN"                                           shift, and go to state 87
    "="                                            shift, and go to state 88


State 94

  104 for_statement: "FOR" "identifier" . ":=" iter_space "DO" statement

    ":="  shift, and go to state 140


State 95

   24 variable: "identifier" .

    $default  reduce using rule 24 (variable)


State 96

   25 variable: variable . "." "identifier"
   26         | variable . "[" expressions "]"
  107 with_statement: "WITH" variable . "DO" statement

    "DO"  shift, and go to state 141
    "."   shift, and go to state 89
    "["   shift, and go to state 90


State 97

  110 io_statement: "READ" "(" . read_list ")"

    "identifier"  shift, and go to state 95

    variable   go to state 142
    read_list  go to state 143
    read_item  go to state 144


State 98

  111 io_statement: "WRITE" "(" . write_list ")"

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41
    "string constant"       shift, and go to state 145

    expression     go to state 146
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45
    write_list     go to state 147
    write_item     go to state 148


State 99

  109 subprogram_call: "identifier" "(" . expressions ")"

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 127
    variable       go to state 43
    expressions    go to state 149
    constant       go to state 44
    setexpression  go to state 45


State 100

   98 assignment: variable ":=" . expression
   99           | variable ":=" . "string constant"

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41
    "string constant"       shift, and go to state 150

    expression     go to state 151
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 101

   86 comp_statement: "BEGIN" statements "END" .

    $default  reduce using rule 86 (comp_statement)


State 102

   87 statements: statements ";" . statement

    "BEGIN"       shift, and go to state 23
    "IF"          shift, and go to state 47
    "WHILE"       shift, and go to state 48
    "FOR"         shift, and go to state 49
    "WITH"        shift, and go to state 50
    "READ"        shift, and go to state 51
    "WRITE"       shift, and go to state 52
    "identifier"  shift, and go to state 53

    $default  reduce using rule 97 (statement)

    variable         go to state 54
    comp_statement   go to state 55
    statement        go to state 152
    assignment       go to state 58
    if_statement     go to state 59
    while_statement  go to state 60
    for_statement    go to state 61
    with_statement   go to state 62
    subprogram_call  go to state 63
    io_statement     go to state 64


State 103

   80 formal_parameters: "(" . parameter_list ")"

    "VAR"  shift, and go to state 153

    $default  reduce using rule 85 (pass)

    parameter_list  go to state 154
    pass            go to state 155


State 104

   78 sub_header: "PROCEDURE" "identifier" formal_parameters .

    $default  reduce using rule 78 (sub_header)


State 105

   77 sub_header: "FUNCTION" "identifier" formal_parameters . ":" standard_type

    ":"  shift, and go to state 156


State 106

   75 subprogram: sub_header ";" "FORWARD" .

    $default  reduce using rule 75 (subprogram)


State 107

   76 subprogram: sub_header ";" declarations . subprograms comp_statement

    $default  reduce using rule 74 (subprograms)

    subprograms  go to state 157


State 108

   43 type_def: "ARRAY" . "[" dims "]" "OF" typename

    "["  shift, and go to state 158


State 109

   45 type_def: "RECORD" . fields "END"

    "identifier"  shift, and go to state 72

    fields       go to state 159
    field        go to state 160
    identifiers  go to state 161


State 110

   44 type_def: "SET" . "OF" typename

    "OF"  shift, and go to state 162


State 111

   52 limit: "ADD" . "integer const"
   53      | "ADD" . "identifier"

    "identifier"     shift, and go to state 163
    "integer const"  shift, and go to state 164


State 112

   46 type_def: "(" . identifiers ")"

    "identifier"  shift, and go to state 72

    identifiers  go to state 165


State 113

   57 limit: "identifier" .

    $default  reduce using rule 57 (limit)


State 114

   54 limit: "integer const" .

    $default  reduce using rule 54 (limit)


State 115

   56 limit: "boolean constant" .

    $default  reduce using rule 56 (limit)


State 116

   55 limit: "character consant" .

    $default  reduce using rule 55 (limit)


State 117

   42 type_defs: "identifier" "=" type_def .

    $default  reduce using rule 42 (type_defs)


State 118

   47 type_def: limit . ".." limit

    ".."  shift, and go to state 166


State 119

   41 type_defs: type_defs ";" "identifier" . "=" type_def

    "="  shift, and go to state 167


State 120

   67 identifiers: identifiers "," . "identifier"

    "identifier"  shift, and go to state 168


State 121

   72 variable_defs: identifiers ":" . typename

    "INTEGER"     shift, and go to state 169
    "REAL"        shift, and go to state 170
    "BOOLEAN"     shift, and go to state 171
    "CHAR"        shift, and go to state 172
    "identifier"  shift, and go to state 173

    typename       go to state 174
    standard_type  go to state 175


State 122

   69 vardefs: "VAR" variable_defs ";" .
   71 variable_defs: variable_defs ";" . identifiers ":" typename

    "identifier"  shift, and go to state 72

    $default  reduce using rule 69 (vardefs)

    identifiers  go to state 176


State 123

   22 expression: "(" expression ")" .

    $default  reduce using rule 22 (expression)


State 124

   37 elexpression: expression ".." . expression

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 177
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 125

   35 elexpressions: elexpressions "," . elexpression

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 79
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45
    elexpression   go to state 178


State 126

   33 setexpression: "[" elexpressions "]" .

    $default  reduce using rule 33 (setexpression)


State 127

   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression . "=" expression
   13           | expression . "IN" expression
   14           | expression . "OR" expression
   15           | expression . "ADD" expression
   16           | expression . "* or / or DIV or MOD or AND" expression
   28 expressions: expression .

    ">= or | or <= or | or <> or | or > or | or<"  shift, and go to state 83
    "ADD"                                          shift, and go to state 84
    "OR"                                           shift, and go to state 85
    "* or / or DIV or MOD or AND"                  shift, and go to state 86
    "IN"                                           shift, and go to state 87
    "="                                            shift, and go to state 88

    $default  reduce using rule 28 (expressions)


State 128

   20 expression: "identifier" "(" expressions . ")"
   27 expressions: expressions . "," expression

    ")"  shift, and go to state 179
    ","  shift, and go to state 180


State 129

   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   11           | expression ">= or | or <= or | or <> or | or > or | or<" expression .
   12           | expression . "=" expression
   13           | expression . "IN" expression
   14           | expression . "OR" expression
   15           | expression . "ADD" expression
   16           | expression . "* or / or DIV or MOD or AND" expression

    "IN"  shift, and go to state 87

    ">= or | or <= or | or <> or | or > or | or<"  error (nonassociative)

    $default  reduce using rule 11 (expression)


State 130

   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression . "=" expression
   13           | expression . "IN" expression
   14           | expression . "OR" expression
   15           | expression . "ADD" expression
   15           | expression "ADD" expression .
   16           | expression . "* or / or DIV or MOD or AND" expression

    ">= or | or <= or | or <> or | or > or | or<"  shift, and go to state 83
    "* or / or DIV or MOD or AND"                  shift, and go to state 86
    "IN"                                           shift, and go to state 87

    $default  reduce using rule 15 (expression)


State 131

   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression . "=" expression
   13           | expression . "IN" expression
   14           | expression . "OR" expression
   14           | expression "OR" expression .
   15           | expression . "ADD" expression
   16           | expression . "* or / or DIV or MOD or AND" expression

    ">= or | or <= or | or <> or | or > or | or<"  shift, and go to state 83
    "* or / or DIV or MOD or AND"                  shift, and go to state 86
    "IN"                                           shift, and go to state 87

    $default  reduce using rule 14 (expression)


State 132

   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression . "=" expression
   13           | expression . "IN" expression
   14           | expression . "OR" expression
   15           | expression . "ADD" expression
   16           | expression . "* or / or DIV or MOD or AND" expression
   16           | expression "* or / or DIV or MOD or AND" expression .

    ">= or | or <= or | or <> or | or > or | or<"  shift, and go to state 83
    "IN"                                           shift, and go to state 87

    $default  reduce using rule 16 (expression)


State 133

   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression . "=" expression
   13           | expression . "IN" expression
   13           | expression "IN" expression .
   14           | expression . "OR" expression
   15           | expression . "ADD" expression
   16           | expression . "* or / or DIV or MOD or AND" expression

    "IN"  error (nonassociative)

    $default  reduce using rule 13 (expression)


State 134

   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression . "=" expression
   12           | expression "=" expression .
   13           | expression . "IN" expression
   14           | expression . "OR" expression
   15           | expression . "ADD" expression
   16           | expression . "* or / or DIV or MOD or AND" expression

    ">= or | or <= or | or <> or | or > or | or<"  shift, and go to state 83
    "ADD"                                          shift, and go to state 84
    "OR"                                           shift, and go to state 85
    "* or / or DIV or MOD or AND"                  shift, and go to state 86
    "IN"                                           shift, and go to state 87

    $default  reduce using rule 12 (expression)


State 135

   25 variable: variable "." "identifier" .

    $default  reduce using rule 25 (variable)


State 136

   26 variable: variable "[" expressions . "]"
   27 expressions: expressions . "," expression

    ","  shift, and go to state 180
    "]"  shift, and go to state 181


State 137

    9 constant_defs: constant_defs ";" "identifier" "=" expression .
   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression . "=" expression
   13           | expression . "IN" expression
   14           | expression . "OR" expression
   15           | expression . "ADD" expression
   16           | expression . "* or / or DIV or MOD or AND" expression

    ">= or | or <= or | or <> or | or > or | or<"  shift, and go to state 83
    "ADD"                                          shift, and go to state 84
    "OR"                                           shift, and go to state 85
    "* or / or DIV or MOD or AND"                  shift, and go to state 86
    "IN"                                           shift, and go to state 87
    "="                                            shift, and go to state 88

    $default  reduce using rule 9 (constant_defs)


State 138

  100 if_statement: "IF" expression "THEN" . statement if_tail

    "BEGIN"       shift, and go to state 23
    "IF"          shift, and go to state 47
    "WHILE"       shift, and go to state 48
    "FOR"         shift, and go to state 49
    "WITH"        shift, and go to state 50
    "READ"        shift, and go to state 51
    "WRITE"       shift, and go to state 52
    "identifier"  shift, and go to state 53

    $default  reduce using rule 97 (statement)

    variable         go to state 54
    comp_statement   go to state 55
    statement        go to state 182
    assignment       go to state 58
    if_statement     go to state 59
    while_statement  go to state 60
    for_statement    go to state 61
    with_statement   go to state 62
    subprogram_call  go to state 63
    io_statement     go to state 64


State 139

  103 while_statement: "WHILE" expression "DO" . statement

    "BEGIN"       shift, and go to state 23
    "IF"          shift, and go to state 47
    "WHILE"       shift, and go to state 48
    "FOR"         shift, and go to state 49
    "WITH"        shift, and go to state 50
    "READ"        shift, and go to state 51
    "WRITE"       shift, and go to state 52
    "identifier"  shift, and go to state 53

    $default  reduce using rule 97 (statement)

    variable         go to state 54
    comp_statement   go to state 55
    statement        go to state 183
    assignment       go to state 58
    if_statement     go to state 59
    while_statement  go to state 60
    for_statement    go to state 61
    with_statement   go to state 62
    subprogram_call  go to state 63
    io_statement     go to state 64


State 140

  104 for_statement: "FOR" "identifier" ":=" . iter_space "DO" statement

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 184
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45
    iter_space     go to state 185


State 141

  107 with_statement: "WITH" variable "DO" . statement

    "BEGIN"       shift, and go to state 23
    "IF"          shift, and go to state 47
    "WHILE"       shift, and go to state 48
    "FOR"         shift, and go to state 49
    "WITH"        shift, and go to state 50
    "READ"        shift, and go to state 51
    "WRITE"       shift, and go to state 52
    "identifier"  shift, and go to state 53

    $default  reduce using rule 97 (statement)

    variable         go to state 54
    comp_statement   go to state 55
    statement        go to state 186
    assignment       go to state 58
    if_statement     go to state 59
    while_statement  go to state 60
    for_statement    go to state 61
    with_statement   go to state 62
    subprogram_call  go to state 63
    io_statement     go to state 64


State 142

   25 variable: variable . "." "identifier"
   26         | variable . "[" expressions "]"
  114 read_item: variable .

    "."  shift, and go to state 89
    "["  shift, and go to state 90

    $default  reduce using rule 114 (read_item)


State 143

  110 io_statement: "READ" "(" read_list . ")"
  112 read_list: read_list . "," read_item

    ")"  shift, and go to state 187
    ","  shift, and go to state 188


State 144

  113 read_list: read_item .

    $default  reduce using rule 113 (read_list)


State 145

  118 write_item: "string constant" .

    $default  reduce using rule 118 (write_item)


State 146

   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression . "=" expression
   13           | expression . "IN" expression
   14           | expression . "OR" expression
   15           | expression . "ADD" expression
   16           | expression . "* or / or DIV or MOD or AND" expression
  117 write_item: expression .

    ">= or | or <= or | or <> or | or > or | or<"  shift, and go to state 83
    "ADD"                                          shift, and go to state 84
    "OR"                                           shift, and go to state 85
    "* or / or DIV or MOD or AND"                  shift, and go to state 86
    "IN"                                           shift, and go to state 87
    "="                                            shift, and go to state 88

    $default  reduce using rule 117 (write_item)


State 147

  111 io_statement: "WRITE" "(" write_list . ")"
  115 write_list: write_list . "," write_item

    ")"  shift, and go to state 189
    ","  shift, and go to state 190


State 148

  116 write_list: write_item .

    $default  reduce using rule 116 (write_list)


State 149

   27 expressions: expressions . "," expression
  109 subprogram_call: "identifier" "(" expressions . ")"

    ")"  shift, and go to state 191
    ","  shift, and go to state 180


State 150

   99 assignment: variable ":=" "string constant" .

    $default  reduce using rule 99 (assignment)


State 151

   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression . "=" expression
   13           | expression . "IN" expression
   14           | expression . "OR" expression
   15           | expression . "ADD" expression
   16           | expression . "* or / or DIV or MOD or AND" expression
   98 assignment: variable ":=" expression .

    ">= or | or <= or | or <> or | or > or | or<"  shift, and go to state 83
    "ADD"                                          shift, and go to state 84
    "OR"                                           shift, and go to state 85
    "* or / or DIV or MOD or AND"                  shift, and go to state 86
    "IN"                                           shift, and go to state 87
    "="                                            shift, and go to state 88

    $default  reduce using rule 98 (assignment)


State 152

   87 statements: statements ";" statement .

    $default  reduce using rule 87 (statements)


State 153

   84 pass: "VAR" .

    $default  reduce using rule 84 (pass)


State 154

   80 formal_parameters: "(" parameter_list . ")"
   82 parameter_list: parameter_list . ";" pass identifiers ":" typename

    ")"  shift, and go to state 192
    ";"  shift, and go to state 193


State 155

   83 parameter_list: pass . identifiers ":" typename

    "identifier"  shift, and go to state 72

    identifiers  go to state 194


State 156

   77 sub_header: "FUNCTION" "identifier" formal_parameters ":" . standard_type

    "INTEGER"  shift, and go to state 169
    "REAL"     shift, and go to state 170
    "BOOLEAN"  shift, and go to state 171
    "CHAR"     shift, and go to state 172

    standard_type  go to state 195


State 157

   73 subprograms: subprograms . subprogram ";"
   76 subprogram: sub_header ";" declarations subprograms . comp_statement

    "BEGIN"      shift, and go to state 23
    "PROCEDURE"  shift, and go to state 24
    "FUNCTION"   shift, and go to state 25

    subprogram      go to state 26
    sub_header      go to state 27
    comp_statement  go to state 196


State 158

   43 type_def: "ARRAY" "[" . dims "]" "OF" typename

    "ADD"                shift, and go to state 111
    "identifier"         shift, and go to state 197
    "integer const"      shift, and go to state 114
    "boolean constant"   shift, and go to state 115
    "character consant"  shift, and go to state 116

    dims    go to state 198
    limits  go to state 199
    limit   go to state 200


State 159

   45 type_def: "RECORD" fields . "END"
   64 fields: fields . ";" field

    "END"  shift, and go to state 201
    ";"    shift, and go to state 202


State 160

   65 fields: field .

    $default  reduce using rule 65 (fields)


State 161

   66 field: identifiers . ":" typename
   67 identifiers: identifiers . "," "identifier"

    ","  shift, and go to state 120
    ":"  shift, and go to state 203


State 162

   44 type_def: "SET" "OF" . typename

    "INTEGER"     shift, and go to state 169
    "REAL"        shift, and go to state 170
    "BOOLEAN"     shift, and go to state 171
    "CHAR"        shift, and go to state 172
    "identifier"  shift, and go to state 173

    typename       go to state 204
    standard_type  go to state 175


State 163

   53 limit: "ADD" "identifier" .

    $default  reduce using rule 53 (limit)


State 164

   52 limit: "ADD" "integer const" .

    $default  reduce using rule 52 (limit)


State 165

   46 type_def: "(" identifiers . ")"
   67 identifiers: identifiers . "," "identifier"

    ")"  shift, and go to state 205
    ","  shift, and go to state 120


State 166

   47 type_def: limit ".." . limit

    "ADD"                shift, and go to state 111
    "identifier"         shift, and go to state 113
    "integer const"      shift, and go to state 114
    "boolean constant"   shift, and go to state 115
    "character consant"  shift, and go to state 116

    limit  go to state 206


State 167

   41 type_defs: type_defs ";" "identifier" "=" . type_def

    "ARRAY"              shift, and go to state 108
    "RECORD"             shift, and go to state 109
    "SET"                shift, and go to state 110
    "ADD"                shift, and go to state 111
    "("                  shift, and go to state 112
    "identifier"         shift, and go to state 113
    "integer const"      shift, and go to state 114
    "boolean constant"   shift, and go to state 115
    "character consant"  shift, and go to state 116

    type_def  go to state 207
    limit     go to state 118


State 168

   67 identifiers: identifiers "," "identifier" .

    $default  reduce using rule 67 (identifiers)


State 169

   60 standard_type: "INTEGER" .

    $default  reduce using rule 60 (standard_type)


State 170

   61 standard_type: "REAL" .

    $default  reduce using rule 61 (standard_type)


State 171

   62 standard_type: "BOOLEAN" .

    $default  reduce using rule 62 (standard_type)


State 172

   63 standard_type: "CHAR" .

    $default  reduce using rule 63 (standard_type)


State 173

   59 typename: "identifier" .

    $default  reduce using rule 59 (typename)


State 174

   72 variable_defs: identifiers ":" typename .

    $default  reduce using rule 72 (variable_defs)


State 175

   58 typename: standard_type .

    $default  reduce using rule 58 (typename)


State 176

   67 identifiers: identifiers . "," "identifier"
   71 variable_defs: variable_defs ";" identifiers . ":" typename

    ","  shift, and go to state 120
    ":"  shift, and go to state 208


State 177

   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression . "=" expression
   13           | expression . "IN" expression
   14           | expression . "OR" expression
   15           | expression . "ADD" expression
   16           | expression . "* or / or DIV or MOD or AND" expression
   37 elexpression: expression ".." expression .

    ">= or | or <= or | or <> or | or > or | or<"  shift, and go to state 83
    "ADD"                                          shift, and go to state 84
    "OR"                                           shift, and go to state 85
    "* or / or DIV or MOD or AND"                  shift, and go to state 86
    "IN"                                           shift, and go to state 87
    "="                                            shift, and go to state 88

    $default  reduce using rule 37 (elexpression)


State 178

   35 elexpressions: elexpressions "," elexpression .

    $default  reduce using rule 35 (elexpressions)


State 179

   20 expression: "identifier" "(" expressions ")" .

    $default  reduce using rule 20 (expression)


State 180

   27 expressions: expressions "," . expression

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 209
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 181

   26 variable: variable "[" expressions "]" .

    $default  reduce using rule 26 (variable)


State 182

  100 if_statement: "IF" expression "THEN" statement . if_tail

    "ELSE"  shift, and go to state 210

    $default  reduce using rule 102 (if_tail)

    if_tail  go to state 211


State 183

  103 while_statement: "WHILE" expression "DO" statement .

    $default  reduce using rule 103 (while_statement)


State 184

   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression . "=" expression
   13           | expression . "IN" expression
   14           | expression . "OR" expression
   15           | expression . "ADD" expression
   16           | expression . "* or / or DIV or MOD or AND" expression
  105 iter_space: expression . "TO" expression
  106           | expression . "DOWNTO" expression

    "DOWNTO"                                       shift, and go to state 212
    "TO"                                           shift, and go to state 213
    ">= or | or <= or | or <> or | or > or | or<"  shift, and go to state 83
    "ADD"                                          shift, and go to state 84
    "OR"                                           shift, and go to state 85
    "* or / or DIV or MOD or AND"                  shift, and go to state 86
    "IN"                                           shift, and go to state 87
    "="                                            shift, and go to state 88


State 185

  104 for_statement: "FOR" "identifier" ":=" iter_space . "DO" statement

    "DO"  shift, and go to state 214


State 186

  107 with_statement: "WITH" variable "DO" statement .

    $default  reduce using rule 107 (with_statement)


State 187

  110 io_statement: "READ" "(" read_list ")" .

    $default  reduce using rule 110 (io_statement)


State 188

  112 read_list: read_list "," . read_item

    "identifier"  shift, and go to state 95

    variable   go to state 142
    read_item  go to state 215


State 189

  111 io_statement: "WRITE" "(" write_list ")" .

    $default  reduce using rule 111 (io_statement)


State 190

  115 write_list: write_list "," . write_item

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41
    "string constant"       shift, and go to state 145

    expression     go to state 146
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45
    write_item     go to state 216


State 191

  109 subprogram_call: "identifier" "(" expressions ")" .

    $default  reduce using rule 109 (subprogram_call)


State 192

   80 formal_parameters: "(" parameter_list ")" .

    $default  reduce using rule 80 (formal_parameters)


State 193

   82 parameter_list: parameter_list ";" . pass identifiers ":" typename

    "VAR"  shift, and go to state 153

    $default  reduce using rule 85 (pass)

    pass  go to state 217


State 194

   67 identifiers: identifiers . "," "identifier"
   83 parameter_list: pass identifiers . ":" typename

    ","  shift, and go to state 120
    ":"  shift, and go to state 218


State 195

   77 sub_header: "FUNCTION" "identifier" formal_parameters ":" standard_type .

    $default  reduce using rule 77 (sub_header)


State 196

   76 subprogram: sub_header ";" declarations subprograms comp_statement .

    $default  reduce using rule 76 (subprogram)


State 197

   51 limits: "identifier" .
   57 limit: "identifier" .

    ".."      reduce using rule 57 (limit)
    $default  reduce using rule 51 (limits)


State 198

   43 type_def: "ARRAY" "[" dims . "]" "OF" typename
   48 dims: dims . "," limits

    ","  shift, and go to state 219
    "]"  shift, and go to state 220


State 199

   49 dims: limits .

    $default  reduce using rule 49 (dims)


State 200

   50 limits: limit . ".." limit

    ".."  shift, and go to state 221


State 201

   45 type_def: "RECORD" fields "END" .

    $default  reduce using rule 45 (type_def)


State 202

   64 fields: fields ";" . field

    "identifier"  shift, and go to state 72

    field        go to state 222
    identifiers  go to state 161


State 203

   66 field: identifiers ":" . typename

    "INTEGER"     shift, and go to state 169
    "REAL"        shift, and go to state 170
    "BOOLEAN"     shift, and go to state 171
    "CHAR"        shift, and go to state 172
    "identifier"  shift, and go to state 173

    typename       go to state 223
    standard_type  go to state 175


State 204

   44 type_def: "SET" "OF" typename .

    $default  reduce using rule 44 (type_def)


State 205

   46 type_def: "(" identifiers ")" .

    $default  reduce using rule 46 (type_def)


State 206

   47 type_def: limit ".." limit .

    $default  reduce using rule 47 (type_def)


State 207

   41 type_defs: type_defs ";" "identifier" "=" type_def .

    $default  reduce using rule 41 (type_defs)


State 208

   71 variable_defs: variable_defs ";" identifiers ":" . typename

    "INTEGER"     shift, and go to state 169
    "REAL"        shift, and go to state 170
    "BOOLEAN"     shift, and go to state 171
    "CHAR"        shift, and go to state 172
    "identifier"  shift, and go to state 173

    typename       go to state 224
    standard_type  go to state 175


State 209

   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression . "=" expression
   13           | expression . "IN" expression
   14           | expression . "OR" expression
   15           | expression . "ADD" expression
   16           | expression . "* or / or DIV or MOD or AND" expression
   27 expressions: expressions "," expression .

    ">= or | or <= or | or <> or | or > or | or<"  shift, and go to state 83
    "ADD"                                          shift, and go to state 84
    "OR"                                           shift, and go to state 85
    "* or / or DIV or MOD or AND"                  shift, and go to state 86
    "IN"                                           shift, and go to state 87
    "="                                            shift, and go to state 88

    $default  reduce using rule 27 (expressions)


State 210

  101 if_tail: "ELSE" . statement

    "BEGIN"       shift, and go to state 23
    "IF"          shift, and go to state 47
    "WHILE"       shift, and go to state 48
    "FOR"         shift, and go to state 49
    "WITH"        shift, and go to state 50
    "READ"        shift, and go to state 51
    "WRITE"       shift, and go to state 52
    "identifier"  shift, and go to state 53

    $default  reduce using rule 97 (statement)

    variable         go to state 54
    comp_statement   go to state 55
    statement        go to state 225
    assignment       go to state 58
    if_statement     go to state 59
    while_statement  go to state 60
    for_statement    go to state 61
    with_statement   go to state 62
    subprogram_call  go to state 63
    io_statement     go to state 64


State 211

  100 if_statement: "IF" expression "THEN" statement if_tail .

    $default  reduce using rule 100 (if_statement)


State 212

  106 iter_space: expression "DOWNTO" . expression

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 226
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 213

  105 iter_space: expression "TO" . expression

    "ADD"                   shift, and go to state 33
    "NOT"                   shift, and go to state 34
    "("                     shift, and go to state 35
    "["                     shift, and go to state 36
    "identifier"            shift, and go to state 37
    "integer const"         shift, and go to state 38
    "unsigned float const"  shift, and go to state 39
    "boolean constant"      shift, and go to state 40
    "character consant"     shift, and go to state 41

    expression     go to state 227
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 214

  104 for_statement: "FOR" "identifier" ":=" iter_space "DO" . statement

    "BEGIN"       shift, and go to state 23
    "IF"          shift, and go to state 47
    "WHILE"       shift, and go to state 48
    "FOR"         shift, and go to state 49
    "WITH"        shift, and go to state 50
    "READ"        shift, and go to state 51
    "WRITE"       shift, and go to state 52
    "identifier"  shift, and go to state 53

    $default  reduce using rule 97 (statement)

    variable         go to state 54
    comp_statement   go to state 55
    statement        go to state 228
    assignment       go to state 58
    if_statement     go to state 59
    while_statement  go to state 60
    for_statement    go to state 61
    with_statement   go to state 62
    subprogram_call  go to state 63
    io_statement     go to state 64


State 215

  112 read_list: read_list "," read_item .

    $default  reduce using rule 112 (read_list)


State 216

  115 write_list: write_list "," write_item .

    $default  reduce using rule 115 (write_list)


State 217

   82 parameter_list: parameter_list ";" pass . identifiers ":" typename

    "identifier"  shift, and go to state 72

    identifiers  go to state 229


State 218

   83 parameter_list: pass identifiers ":" . typename

    "INTEGER"     shift, and go to state 169
    "REAL"        shift, and go to state 170
    "BOOLEAN"     shift, and go to state 171
    "CHAR"        shift, and go to state 172
    "identifier"  shift, and go to state 173

    typename       go to state 230
    standard_type  go to state 175


State 219

   48 dims: dims "," . limits

    "ADD"                shift, and go to state 111
    "identifier"         shift, and go to state 197
    "integer const"      shift, and go to state 114
    "boolean constant"   shift, and go to state 115
    "character consant"  shift, and go to state 116

    limits  go to state 231
    limit   go to state 200


State 220

   43 type_def: "ARRAY" "[" dims "]" . "OF" typename

    "OF"  shift, and go to state 232


State 221

   50 limits: limit ".." . limit

    "ADD"                shift, and go to state 111
    "identifier"         shift, and go to state 113
    "integer const"      shift, and go to state 114
    "boolean constant"   shift, and go to state 115
    "character consant"  shift, and go to state 116

    limit  go to state 233


State 222

   64 fields: fields ";" field .

    $default  reduce using rule 64 (fields)


State 223

   66 field: identifiers ":" typename .

    $default  reduce using rule 66 (field)


State 224

   71 variable_defs: variable_defs ";" identifiers ":" typename .

    $default  reduce using rule 71 (variable_defs)


State 225

  101 if_tail: "ELSE" statement .

    $default  reduce using rule 101 (if_tail)


State 226

   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression . "=" expression
   13           | expression . "IN" expression
   14           | expression . "OR" expression
   15           | expression . "ADD" expression
   16           | expression . "* or / or DIV or MOD or AND" expression
  106 iter_space: expression "DOWNTO" expression .

    ">= or | or <= or | or <> or | or > or | or<"  shift, and go to state 83
    "ADD"                                          shift, and go to state 84
    "OR"                                           shift, and go to state 85
    "* or / or DIV or MOD or AND"                  shift, and go to state 86
    "IN"                                           shift, and go to state 87
    "="                                            shift, and go to state 88

    $default  reduce using rule 106 (iter_space)


State 227

   11 expression: expression . ">= or | or <= or | or <> or | or > or | or<" expression
   12           | expression . "=" expression
   13           | expression . "IN" expression
   14           | expression . "OR" expression
   15           | expression . "ADD" expression
   16           | expression . "* or / or DIV or MOD or AND" expression
  105 iter_space: expression "TO" expression .

    ">= or | or <= or | or <> or | or > or | or<"  shift, and go to state 83
    "ADD"                                          shift, and go to state 84
    "OR"                                           shift, and go to state 85
    "* or / or DIV or MOD or AND"                  shift, and go to state 86
    "IN"                                           shift, and go to state 87
    "="                                            shift, and go to state 88

    $default  reduce using rule 105 (iter_space)


State 228

  104 for_statement: "FOR" "identifier" ":=" iter_space "DO" statement .

    $default  reduce using rule 104 (for_statement)


State 229

   67 identifiers: identifiers . "," "identifier"
   82 parameter_list: parameter_list ";" pass identifiers . ":" typename

    ","  shift, and go to state 120
    ":"  shift, and go to state 234


State 230

   83 parameter_list: pass identifiers ":" typename .

    $default  reduce using rule 83 (parameter_list)


State 231

   48 dims: dims "," limits .

    $default  reduce using rule 48 (dims)


State 232

   43 type_def: "ARRAY" "[" dims "]" "OF" . typename

    "INTEGER"     shift, and go to state 169
    "REAL"        shift, and go to state 170
    "BOOLEAN"     shift, and go to state 171
    "CHAR"        shift, and go to state 172
    "identifier"  shift, and go to state 173

    typename       go to state 235
    standard_type  go to state 175


State 233

   50 limits: limit ".." limit .

    $default  reduce using rule 50 (limits)


State 234

   82 parameter_list: parameter_list ";" pass identifiers ":" . typename

    "INTEGER"     shift, and go to state 169
    "REAL"        shift, and go to state 170
    "BOOLEAN"     shift, and go to state 171
    "CHAR"        shift, and go to state 172
    "identifier"  shift, and go to state 173

    typename       go to state 236
    standard_type  go to state 175


State 235

   43 type_def: "ARRAY" "[" dims "]" "OF" typename .

    $default  reduce using rule 43 (type_def)


State 236

   82 parameter_list: parameter_list ";" pass identifiers ":" typename .

    $default  reduce using rule 82 (parameter_list)
